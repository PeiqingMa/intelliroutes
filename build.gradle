import org.jetbrains.grammarkit.tasks.GenerateLexer
import org.jetbrains.grammarkit.tasks.GenerateParser

buildscript {
    repositories {
        maven { url 'http://dl.bintray.com/jetbrains/intellij-plugin-service' }
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath 'com.github.hurricup:gradle-grammar-kit-plugin:2017.1.1'
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.1.51'
    id 'org.jetbrains.intellij' version '0.2.17'
    id 'com.palantir.git-version' version '0.10.0'
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile 'io.kotlintest:kotlintest:2.0.7'
}

group 'com.github.tomas-milata'
version gitVersion() // uses git describe

sourceCompatibility = 1.8
targetCompatibility = 1.8
apply plugin: 'org.jetbrains.grammarkit'

def genRoot = file('src/generated')

sourceSets {
    main {
        java.srcDirs 'src/main', genRoot
        resources.srcDir 'resources'
    }
}

intellij {
    version '2017.3'
    plugins 'org.intellij.scala:2017.3.9'
}

patchPluginXml {
    sinceBuild '173'
}

task generateParser(type: GenerateParser) {
    source = 'src/main/grammar/Routes.bnf'
    pathToParser = '/com/github/tomasmilata/intelliroutes/parser/RoutesParser.java'
    pathToPsiRoot = '/com/github/tomasmilata/intelliroutes/psi'
    targetRoot = genRoot
    purgeOldFiles = true
}

task generateLexer(type: GenerateLexer) {
    dependsOn generateParser
    source = 'src/main/jflex/Routes.flex'
    targetDir = "${genRoot}/com/github/tomasmilata/intelliroutes"
    targetClass = 'RoutesLexer'
    purgeOldFiles = true
}

compileJava {
    dependsOn generateLexer
}